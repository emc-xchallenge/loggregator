// This file was generated by counterfeiter
package fakes

import (
	"metron/writers/dopplerforwarder"
	"sync"

	"github.com/cloudfoundry/loggregatorlib/loggregatorclient"
)

type FakeClientPool struct {
	RandomClientStub        func() (loggregatorclient.Client, error)
	randomClientMutex       sync.RWMutex
	randomClientArgsForCall []struct{}
	randomClientReturns     struct {
		result1 loggregatorclient.Client
		result2 error
	}
}

func (fake *FakeClientPool) RandomClient() (loggregatorclient.Client, error) {
	fake.randomClientMutex.Lock()
	fake.randomClientArgsForCall = append(fake.randomClientArgsForCall, struct{}{})
	fake.randomClientMutex.Unlock()
	if fake.RandomClientStub != nil {
		return fake.RandomClientStub()
	} else {
		return fake.randomClientReturns.result1, fake.randomClientReturns.result2
	}
}

func (fake *FakeClientPool) RandomClientCallCount() int {
	fake.randomClientMutex.RLock()
	defer fake.randomClientMutex.RUnlock()
	return len(fake.randomClientArgsForCall)
}

func (fake *FakeClientPool) RandomClientReturns(result1 loggregatorclient.Client, result2 error) {
	fake.RandomClientStub = nil
	fake.randomClientReturns = struct {
		result1 loggregatorclient.Client
		result2 error
	}{result1, result2}
}

var _ dopplerforwarder.ClientPool = new(FakeClientPool)
